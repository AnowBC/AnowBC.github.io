<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>test math</title>
      <link href="/posts/15667.html"/>
      <url>/posts/15667.html</url>
      
        <content type="html"><![CDATA[<p>$y = f(x)$<br>\[y = {f_{ {g_1}}}(x)\]</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 测试demo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
            <tag> 函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建网站的随想随记</title>
      <link href="/posts/65311.html"/>
      <url>/posts/65311.html</url>
      
        <content type="html"><![CDATA[<p>我也不知道为什么，会如此执着于这样一件事。我想要做什么呢？</p><p>其实我只是想做一个属于自己的，也可以跟人分享的小站。因为坚持了很久的事情，我不想说放弃就放弃。</p><p>大致是   用Typora当做日记与随笔记录，然后用腾讯云的COS做图床，通过PicGo进行连接。用GitBash将文件上传到云端，部署就使用Github+腾讯COS对象存储。</p><p>可是原本看起来完好顺利的事情为什么我却中途放弃了，甚至把Hexo卸载了一遍。</p><p>原因出在部署上，腾讯云端的COS无论我怎么上传，我始终都无法做到实时更新。我试了很多办法，但还是无济于事，不知道问题到底是出在哪儿。</p><p>而github端的上传是完好的，只是速度真的很慢，所以才考虑用腾讯的cdn加速。</p><p>重新部署，更新主题，继续出发吧，加油。</p><p>###环境:<br>Git<br>Node.js<br>Hexo</p><p>###内容产出工具：<br>Typora :  markdown写文字<br>PicGo:  图床上传工具<br>GitHub: 部署托管代码<br>腾讯云COS: 作图床，部署cdn，加速网站</p><p>自动化部署脚本</p><p>###网站页面:</p><ul><li>1.内容设计</li><li>2.功能模块设计<br>(主题改造：添加文档插件)<br>‌个人相册<br>‌标签分类合并<br>‌永久文章链接</li></ul><p>###SEO收录优化</p><p>Next:</p><ul><li>Sof云函数</li><li>网页爬虫，正则表达式</li><li>微信公众号</li><li>微信小程序</li><li>树莓派🥧，Linux</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术心得 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云COS＋CDN优化部署静态网站</title>
      <link href="/posts/59280.html"/>
      <url>/posts/59280.html</url>
      
        <content type="html"><![CDATA[<h2 id="前因："><a href="#前因：" class="headerlink" title="前因："></a>前因：</h2><p>在国外平台namesilo上买的域名即将到期了，国内访问个人网站的速度着实很慢。</p><p>于是就寻求能加速dns域名解析，优化网站访问速度的解决方式。</p><h2 id="心路历程："><a href="#心路历程：" class="headerlink" title="心路历程："></a>心路历程：</h2><h3 id="1-域名转移-amp-备案"><a href="#1-域名转移-amp-备案" class="headerlink" title="1.域名转移&amp;备案"></a>1.域名转移&amp;备案</h3><p>最先是将namesilo的dns解析地址转成阿里云的地址，然而速度还是一如既往得慢。</p><p>然后便考虑是否有加速访问的服务，就发现了cdn业务。</p><p>试过了cloudflare解析，我发现访问他们网站的速度都很慢。</p><p>我便放弃了国外的节点加速方案。</p><a id="more"></a><p>接着我优先考虑的，就是将自己的域名续费后转移到国内，看过阿里，华为，又拍，腾讯的云服务，最终选择了腾讯云转入域名进行备案。</p><p>虽然当初申请域名就是想省去备案的麻烦才去namesilo，然而外网访问速度劝退，不方便操作。</p><p>不过namesilo的域名转移倒没有过分捆绑，很自由，最多就一封挽留邮件，这点不错。</p><p>印象比较深的还是阿里跟腾讯的业务。阿里云的客服还打电话咨询我是不是在做什么项目。两家算是竞争关系，对学生的优惠力度也挺大的，可以当韭菜感受一下云计算。</p><p>备案审核在中途视频验证的部分因为我单方面的虚拟定位导致备案小程序无法定位我的具体位置浪费了不少时间，腾讯备案都会有客服跟进。</p><p>过了初审后，管局备案等待的过程大致持续了一周。终于拿到ICP备案号了。</p><p>然而还发消息说要公安备案…算了，之后再说吧。</p><h3 id="2-dns解析-ssl证书获取-cdn业务-cos对象存储"><a href="#2-dns解析-ssl证书获取-cdn业务-cos对象存储" class="headerlink" title="2.dns解析|ssl证书获取|cdn业务|cos对象存储"></a>2.dns解析|ssl证书获取|cdn业务|cos对象存储</h3><p>国内的管理界面看着有序很多，ssl的证书也是一键式获取。不像原来，为了实现https的跳转，我用linux配置了Nginx，申请了免费的Let’s Encrypt证书，给我带来不少的困难。</p><p>不过事实证明，去搜问题不如多看看官方文档，写得很详尽了。</p><p>我开通了他们50g的cdn业务。本以为可以按照要求，直接部署好的。没想到一直返回报错信息。而且每次部署都要等待5分钟左右。</p><p>具体问题：</p><p>①总是跳转不安全连接，因为先前用的免费证书，cdn的地址没有配上证书。我一直觉得是这个原因而无法访问。然而配好了依旧无法访问，甚至无法连接。</p><p>②原先配置后谷歌浏览器是可以进行访问的，但是一换360极速浏览器以及手机移动端甚至是云服务器访问登录，一直返回ERR_EMPTY_RESPONSE，我还看了状态码，324  502 404…都在修改的不同时期出现过。</p><p>然而ping域名地址，还是可以ping通，cdn也显示无异常。</p><p>一筹莫展之际，我选择了——睡觉(～﹃～)~zZ</p><p>第二天，我另辟蹊径，偶然看到静态网站托管的信息，发现原来还有一个cos对象存储的业务。甚至点进配置信息，也有cdn加速的选项。</p><p>我搜索了hexo博客部署到cos上的流程，发现需要用npm在hexo的目录下安装（但npm真的下载很慢），于是换了淘宝源cnpm安装</p><p>安装淘宝镜像</p><pre><code>$ npm install -g cnpm --registry=https://registry.npm.taobao.org</code></pre><p>安装cos部署组件</p><pre><code>cnpm install hexo-deployer-qcloud-cos --save</code></pre><p>接着在腾讯云上传本地的博客信息，也可以下载个COSBrowser的图形管理器进行上传（需要获取API密钥登录），在配置文件里修改部署部分。</p><p>这是我原来github与云服务器部署的内容</p><pre class=" language-html"><code class="language-html"># Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:  type: git  repo:     github: git@github.com:*****/*****.github.io.git    sever: git@*******:/var/repo/hexoBlog.git  brach: test</code></pre><p>替换成cos部署组件的内容。</p><pre class=" language-html"><code class="language-html">deploy:  type: qcloud-cos  cosRegion: ap-beijing  cosSecretId: **********  cosSecretKey: ************  cosBucket: *****  cosAppid:  ********  remotePath: </code></pre><p><code>cosRegion</code>：根据你选择的位置填写。（可从储存桶基本信息所属地域查看）</p><p><code>cosSecretId</code>：填写之前创建的密钥id</p><p><code>cosSecretKey</code>：填写id对应的key</p><p><code>cosBucket</code>：填写储存同的名称(不带数字的)</p><p><code>cosAppid</code>：填写空间名称中的数字（名称后的数字部分）</p><p>接着在git bash进行</p><p>hexo clean</p><p>hexo g</p><p>hexo d</p><p> 就部署成功啦。</p><p>附录：（感谢参考）</p><p><a href="https://yq.aliyun.com/articles/695055">https://yq.aliyun.com/articles/695055</a>hexo使用淘宝镜像CNPM安装插件</p><p><a href="https://iwalyou.com/1500.html">https://iwalyou.com/1500.html</a>将hexo部署在腾讯云对象储存或者阿里云oss上</p><p><a href="https://bbs.qcloud.com/thread-28526-1-1.html">https://bbs.qcloud.com/thread-28526-1-1.html</a>腾讯云的CDN到底该怎么配置呀？</p><p><a href="https://juejin.im/post/6844903810091974670">https://juejin.im/post/6844903810091974670</a>Hexo博客迁移之旅（Coding到腾讯云COS）+ Travis CI持续集成</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo网站基于Nginx部署至VPS教程</title>
      <link href="/posts/40991.html"/>
      <url>/posts/40991.html</url>
      
        <content type="html"><![CDATA[<p>&nbsp;</p><h2 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1.准备工作"></a>1.准备工作</h2><ul><li><p>win10主机</p></li><li><p>VPS[云服务器]—Linux centOS 6 （<a href="https://www.vultr.com/">Vultr</a>上购得）</p></li><li><p>SSH工具：（win版）Xshell 5<a href="https://www.banwagongzw.com/55.html">下载地址</a></p></li><li><p>git工具：Git For Windows <a href="https://gitforwindows.org/">下载地址</a></p></li><li><p>了解SSH，VPS，git ，SSL，Nginx 基本概念</p></li><li><p>熟悉vim &amp; linux 基本指令操作</p></li></ul><p>&nbsp;</p><h2 id="2-Node-js安装-amp-环境配置"><a href="#2-Node-js安装-amp-环境配置" class="headerlink" title="2.Node.js安装&amp;环境配置"></a>2.Node.js安装&amp;环境配置</h2><p>在ssh工具上（Xshell5）输入命令行下载：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">wget</span> https://nodejs.org/dist/v10.5.0/node-v10.5.0-linux-x64.tar.xz</code></pre><pre class=" language-bash"><code class="language-bash"><span class="token function">tar</span> -xvJf node-v10.5.0-linux-x64.tar.xz<span class="token function">mv</span> node-v10.5.0-linux-x64 node      <span class="token comment" spellcheck="true">#解压Node.js</span></code></pre><pre class=" language-bash"><code class="language-bash"><span class="token function">mv</span> node/ /usr/local/vim ~/.bash_profile               <span class="token comment" spellcheck="true">#配置环境变量</span></code></pre><pre class=" language-bash"><code class="language-bash"><span class="token function">export</span> NODE_HOME<span class="token operator">=</span>/usr/local/node      <span class="token comment" spellcheck="true">#node路径</span><span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$NODE_HOME</span>/bin:<span class="token variable">$PATH</span></code></pre><pre class=" language-bash"><code class="language-bash"><span class="token function">source</span> ~/.profile                  <span class="token comment" spellcheck="true">#更新配置</span></code></pre><pre class=" language-bash"><code class="language-bash">node -v                <span class="token comment" spellcheck="true">#查看node版本，测试是否配置正确</span></code></pre><p><img src="https://i.loli.net/2019/07/12/5d28657d71a9224575.png" alt="1562921086196.png"></p><p>ps：搭建hexo博客的时候windows端也需要安装Node.js跟git<br>可去<a href="https://nodejs.org/en/">Node.js</a>官网或者命令行下载，至于安装和环境变量配置,这里就不详述了<br>&nbsp;</p><a id="more"></a><h2 id="3-git安装-amp-配置"><a href="#3-git安装-amp-配置" class="headerlink" title="3.git安装&amp;配置"></a>3.git安装&amp;配置</h2><p>在ssh工具上（Xshell5）输入命令行下载：</p><pre class=" language-bash"><code class="language-bash">yum <span class="token function">install</span> <span class="token function">git</span>   <span class="token comment" spellcheck="true">#安装git</span></code></pre><pre class=" language-bash"><code class="language-bash">adduser <span class="token function">git</span>     <span class="token comment" spellcheck="true">#创建git账户</span></code></pre><pre class=" language-bash"><code class="language-bash"><span class="token function">chmod</span> 740 /etc/sudoersvim /etc/sudoers      <span class="token comment" spellcheck="true">#为git账户添加权限</span></code></pre><p>&nbsp;</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## Allow root to run any commands anywhere</span>    root    ALL<span class="token operator">=</span><span class="token punctuation">(</span>ALL<span class="token punctuation">)</span>     AL    <span class="token comment" spellcheck="true">#vim打开后，找到此行</span></code></pre><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span>     ALL<span class="token operator">=</span><span class="token punctuation">(</span>ALL<span class="token punctuation">)</span>     ALL       <span class="token comment" spellcheck="true">#在目标行下方写入此行 [从而给予git账户root权限]</span></code></pre><p><img src="https://i.loli.net/2019/07/12/5d286679eb71e81454.png" alt="1562826886724.png"></p><pre class=" language-bash"><code class="language-bash"><span class="token function">chmod</span> 400 /etc/sudoers     <span class="token comment" spellcheck="true">#保存退出并修改权限</span></code></pre><p>&nbsp;</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">passwd</span> <span class="token function">git</span>          <span class="token comment" spellcheck="true">#设置git账户密码</span></code></pre><pre class=" language-bash"><code class="language-bash"><span class="token function">su</span> <span class="token function">git</span>        <span class="token comment" spellcheck="true">#切换git账户</span><span class="token function">mkdir</span> ~/.ssh            <span class="token comment" spellcheck="true">#创建 ~/.ssh 文件夹</span>vim ~/.ssh/authorized_keys    <span class="token comment" spellcheck="true">#生成/.ssh/authorized_keys 文件</span>                              <span class="token comment" spellcheck="true"># 将公钥复制到authorized_keys</span><span class="token function">chmod</span> 600 /home/git/.ssh/authorized_keys  <span class="token comment" spellcheck="true">#给予文件权限</span><span class="token function">chmod</span> 700 /home/git/.ssh</code></pre><p><img src="https://i.loli.net/2019/07/12/5d28667a0279853639.png" alt="1562828442351.png"></p><p>&nbsp;</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#cd 到指定文件夹下创建指定目录</span>  <span class="token comment" spellcheck="true">#  var[与etc同级] -->  repo &amp; www  -->  hexo &amp; [hexoBlog.git]</span><span class="token comment" spellcheck="true">#repo作为为git的仓库目录</span><span class="token function">cd</span>  /var<span class="token function">mkdir</span> /var/repo<span class="token function">chown</span> -R git:git /var/repo<span class="token function">chmod</span> -R 755 /var/repo<span class="token comment" spellcheck="true">#www作为repo的同级目录</span><span class="token function">cd</span>  /var<span class="token function">mkdir</span> /var/www<span class="token function">chown</span> -R git:git /var/www<span class="token function">chmod</span> -R 755 /var/www<span class="token comment" spellcheck="true">#hexo作为网站的根目录</span><span class="token function">cd</span>  /var/www<span class="token function">mkdir</span> /var/www/hexo<span class="token function">chown</span> -R git:git /var/www/hexo<span class="token function">chmod</span> -R 755 /var/www/hexo<span class="token comment" spellcheck="true">#再创建一个空的git仓库</span><span class="token function">cd</span> /var/www<span class="token function">git</span> init --bare hexoBlog.git</code></pre><p><img src="https://i.loli.net/2019/07/12/5d2865dc8de1d85338.png" alt="1562829179764.png"></p><p><img src="https://i.loli.net/2019/07/12/5d2865dc0f0d057485.png" alt="1562829736502.png"></p><p><img src="https://i.loli.net/2019/07/12/5d2865dc3c19551970.png" alt="1562829832352.png"></p><p>&nbsp;</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#创建一个新的git[hooks]-用来自动部署，在git创建后自动生成的文件夹里，新建post-receive文件</span>vim /var/repo/hexoBlog.git/hooks/post-receive</code></pre><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#写入代码并保存退出</span><span class="token comment" spellcheck="true">#!/bin/bash</span><span class="token function">git</span> --work-tree<span class="token operator">=</span>/var/www/hexo --git-dir<span class="token operator">=</span>/var/repo/hexoBlog.git checkout -f</code></pre><p><img src="https://i.loli.net/2019/07/12/5d2865dc2aa8d29682.png" alt="1562829957114.png"></p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#修改权限，使得文件可执行</span><span class="token function">chown</span> -R git:git /var/repo/hexoBlog.git/hooks/post-receive<span class="token function">chmod</span> +x /var/repo/hexoBlog.git/hooks/post-receive<span class="token function">chown</span> -R git:git /var/repo/<span class="token function">chown</span> -R git:git /var/www/hexo</code></pre><p>&nbsp;</p><h2 id="4-检测：登陆VPS-—SSH-远程连接"><a href="#4-检测：登陆VPS-—SSH-远程连接" class="headerlink" title="4.检测：登陆VPS —SSH 远程连接"></a>4.检测：登陆VPS —SSH 远程连接</h2><ul><li><p>首先，我们得用VPS建一个SS服务器，这个部分不详述，可参考github上的这篇教程：</p><p>​           <a href="https://github.com/Alvin9999/new-pac/wiki/%E8%87%AA%E5%BB%BAss%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%99%E7%A8%8B">自建ss服务器教程</a></p></li><li><p>vps ssh连接登陆：（点击连接按钮，显示绿色说明连接成功，登陆上了vps）</p></li></ul><p><img src="https://i.loli.net/2019/07/12/5d2866b05881590816.png" alt="1562921879315.png"></p><ul><li>在本地终端(<a href="https://gitforwindows.org/">Git For Windows</a>)上输入命令：</li></ul><pre><code>ssh -v   git@server ip （-p）   #本地测试可否免密登陆git                               #sever ip：云服务器ip地址                               #-p 端口号可选，通常登陆默认端口</code></pre><ul><li>若出现以下画面，则表示连接成功：</li></ul><p><img src="https://i.loli.net/2019/07/12/5d2865dc859bf85860.png" alt="1562828772197.png"><br><img src="https://i.loli.net/2019/07/12/5d2865dc767ac45966.png" alt="1562828776220.png"></p><p>&nbsp;</p><h2 id="5-Nginx安装-amp-启动"><a href="#5-Nginx安装-amp-启动" class="headerlink" title="5.Nginx安装&amp;启动"></a>5.Nginx安装&amp;启动</h2><p>在服务器上(Xshell 5)上输入命令：[使用yum安装]</p><pre class=" language-bash"><code class="language-bash">yum updateyum <span class="token function">install</span> -y nginx   <span class="token comment" spellcheck="true">#更新yum，下载—nginx</span></code></pre><pre class=" language-bash"><code class="language-bash"><span class="token function">service</span> nginx start    <span class="token comment" spellcheck="true">#启动 nginx服务</span></code></pre><p>在win10 上的浏览器上  输入vps的IP地址：(出现如下界面[已汉译]，表示连接成功)</p><p>若无法访问，可能是因为防火墙的问题，后面会提到。</p><p><img src="https://i.loli.net/2019/07/12/5d28657da2ffb35360.png" alt="1562898165302.png"></p><p>&nbsp;</p><h2 id="6-关于Nginx配置"><a href="#6-关于Nginx配置" class="headerlink" title="6.关于Nginx配置"></a>6.关于Nginx配置</h2><p>接下来，就是在windoews上使用ssh（xshell 5） 修改nginx的配置文件（.conf）</p><p>实现网站部署到vps上的任务，这部分我们之后也会详述。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">service</span> nginx restart  <span class="token comment" spellcheck="true">#重启nginx服务</span></code></pre><p>&nbsp;</p><h2 id="7-SSL证书上传到vps上"><a href="#7-SSL证书上传到vps上" class="headerlink" title="7.SSL证书上传到vps上"></a>7.SSL证书上传到vps上</h2><ul><li>在本地终端[Git For Windows]输入命令 ：<br>（事先在云服务器的nginx文件夹下创建cert文件夹，用于存放证书跟私钥）</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">scp</span> /path/filename root@serverip:/path/  <span class="token comment" spellcheck="true">#scp上传</span></code></pre><p>  <img src="https://i.loli.net/2019/07/12/5d28657dc3e9515408.png" alt="1562916655686.png"></p><ul><li>打开Xshell，确认云服务器端上传情况：</li></ul><p><img src="https://i.loli.net/2019/07/12/5d2865dc51d3083022.png" alt="1562832478910.png"></p><p>&nbsp;</p><h2 id="8-修改Nginx配置文件"><a href="#8-修改Nginx配置文件" class="headerlink" title="8.修改Nginx配置文件"></a>8.修改Nginx配置文件</h2><p><img src="https://i.loli.net/2019/07/12/5d28657d851d630846.png" alt="1562918250019.png"></p><ul><li><p><strong>conf.d</strong>：这是一个文件夹，所有存有[*.conf]格式的文件都可以在此生效，配置时我们可以从里面添加  [XXX.conf]</p></li><li><p><strong>default.conf</strong>：default是这个文件的备份文件，可以删除，主文件失效的时候可以对它进行修改</p></li></ul><p>我们打开后看到下图，我的conf.d文件里包括了nginx.conf（原有是：default.conf，这里我删去了，并修改了文件内容）</p><p><img src="https://i.loli.net/2019/07/12/5d28657dd010173624.png" alt="1562918507631.png"></p><p>需要注意的是，可能有的版本只有nginx.conf文件，并没有conf.d这样的一体化文件进行管理，我们对它直接修改就好。</p><ul><li><p><strong>vim打开nginx.conf  配置内容添加：</strong></p></li><li><p>在浏览模式下输入“i”进入编辑模式，</p></li><li><p>可将绿色光标下移看到完整内容[右下角显示内容行数与百分比]，</p></li><li><p>“#”表示备注，平时不生效</p></li><li><p>修改完文件后，wq保存退出</p></li><li><p>sever nginx restart 重启服务，</p></li><li><p>可在提交后，测试连接情况，并查看有无报错信息</p></li></ul><pre class=" language-vim"><code class="language-vim">server  #注意缩进问题&amp;#<span class="token number">123</span><span class="token punctuation">;</span>    listen <span class="token number">80</span><span class="token punctuation">;</span>        # server_name 填写自己的域名    server_name anowbc<span class="token operator">.</span><span class="token builtin">com</span>  www<span class="token operator">.</span>anowbc<span class="token operator">.</span><span class="token builtin">com</span><span class="token punctuation">;</span>    index index<span class="token operator">.</span>php index<span class="token operator">.</span>html index<span class="token operator">.</span>htm default<span class="token operator">.</span>php default<span class="token operator">.</span>htm default<span class="token operator">.</span>html<span class="token punctuation">;</span>          # 这里root填写自己的网站根目录，修改为<span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>hexo    root <span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>hexo<span class="token punctuation">;</span>    &amp;#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><pre class=" language-vim"><code class="language-vim"># HTTPS serverserver &amp;#<span class="token number">123</span><span class="token punctuation">;</span>        listen       <span class="token number">443</span> <span class="token builtin">ssl</span><span class="token punctuation">;</span>        server_name  anowbc<span class="token operator">.</span><span class="token builtin">com</span>  www<span class="token operator">.</span>anowbc<span class="token operator">.</span><span class="token builtin">com</span> <span class="token punctuation">;</span>              #填写域名        <span class="token builtin">ssl</span> <span class="token keyword">on</span><span class="token punctuation">;</span>        index index<span class="token operator">.</span>html index<span class="token operator">.</span>htm<span class="token punctuation">;</span>        ssl_certificate      <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span>cert<span class="token operator">/</span>full_chain<span class="token operator">.</span>pem<span class="token punctuation">;</span>        ssl_certificate_key  <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span>cert<span class="token operator">/</span>private<span class="token operator">.</span><span class="token builtin">key</span><span class="token punctuation">;</span>               #<span class="token builtin">ssl</span>证书与密钥信息，写上文件路径        ssl_session_cache    shared<span class="token punctuation">:</span>SSL<span class="token punctuation">:</span>1m<span class="token punctuation">;</span>        ssl_session_timeout  5m<span class="token punctuation">;</span>        ssl_ciphers  HIGH<span class="token punctuation">:</span><span class="token operator">!</span>aNULL<span class="token punctuation">:</span><span class="token operator">!</span>MD5<span class="token punctuation">;</span>        ssl_prefer_server_ciphers  <span class="token keyword">on</span><span class="token punctuation">;</span>        location <span class="token operator">/</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>            index index<span class="token operator">.</span>html index<span class="token operator">.</span>htm<span class="token punctuation">;</span>            root    <span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>hexo <span class="token punctuation">;</span>            #基于root权限        &amp;#<span class="token number">125</span><span class="token punctuation">;</span>    &amp;#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><ul><li>如下图所示：</li></ul><p><img src="https://i.loli.net/2019/07/12/5d28657d9779458494.png" alt="1562919535220.png"></p><p>&nbsp;</p><h2 id="9-防火墙：开放HTTPS端口"><a href="#9-防火墙：开放HTTPS端口" class="headerlink" title="9.防火墙：开放HTTPS端口"></a>9.防火墙：开放HTTPS端口</h2><pre class=" language-bash"><code class="language-bash">vim /etc/sysconfig/iptables   <span class="token comment" spellcheck="true">#打开防火墙</span></code></pre><pre class=" language-bash"><code class="language-bash">-A INPUT -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT  <span class="token comment" spellcheck="true">#在22端口后添加 </span></code></pre><pre class=" language-bash"><code class="language-bash"><span class="token function">service</span> iptables restart  <span class="token comment" spellcheck="true">#重启防火墙服务</span></code></pre><p><img src="https://i.loli.net/2019/07/12/5d28657db03aa15197.png" alt="1562917355846.png"></p><p>&nbsp;</p><h2 id="10-Hexo配置"><a href="#10-Hexo配置" class="headerlink" title="10.Hexo配置"></a>10.Hexo配置</h2><ul><li>ps：关于Hexo网站的搭建，可以查看相关文章，涉及点不多：推荐在<a href="https://hexo.io/zh-cn/docs/">Hexo官网</a>查看相关文档和视频教程</li></ul><p>配置hexo网站的_config.yml文件，完成自动化部署</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repo</span><span class="token punctuation">:</span>     <span class="token key atrule">github</span><span class="token punctuation">:</span> git@github.com<span class="token punctuation">:</span>git@github.com<span class="token punctuation">:</span>AnowBC/AnowBC.github.io.git    <span class="token key atrule">server</span><span class="token punctuation">:</span> git@198.**.**.***<span class="token punctuation">:</span>/var/repo/hexoBlog.git  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master</code></pre><p>在Git For Windows上输入<a href="https://hexo.io/zh-cn/docs/commands">hexo命令</a>:</p><pre class=" language-bash"><code class="language-bash">hexo clean   <span class="token comment" spellcheck="true">#清除缓存文件</span>hexo g       <span class="token comment" spellcheck="true">#generate生成静态文件。</span>hexo d       <span class="token comment" spellcheck="true">#deploy部署网站</span></code></pre><p>  出现如下画面，则部署成功:(可git clone 下来，查看部署情况)</p><p><img src="https://i.loli.net/2019/07/12/5d28657d8c3d664879.png" alt="1562917450246.png"></p><p>&nbsp;</p><h2 id="11-小结"><a href="#11-小结" class="headerlink" title="11.小结"></a>11.小结</h2><p>​- <strong>收获：</strong></p><ul><li><p>基本完成了从网站搭建到实现双线部署的全过程</p></li><li><p>同时部署在Github跟自建的VPS云服务器上，方便管理</p></li><li><p>利用SSH实现远程连接操作，本地端使用git bash实现快速上传</p></li></ul><p>-<strong>不足：</strong></p><ul><li><p>对于SSL证书，http到https的连接跳转有待完善</p><p>（目前是使用Let’s Encrypt 免费证书并绑定github的强制https跳转）</p><p>（ps：这就涉及到Linux下 Nginx的熟练使用跟配置问题 了，也大致尝试了win下的 IIS，[java 环境]tomcat。Apache暂时没有尝试，配置 Nginx 应该是最方便快捷的方式了）</p></li></ul><ul><li>最后，东拼西凑写了一篇不算特别优秀详尽的教程心得，手法有待提高。在此感谢@mouryou大佬不厌其烦的悉心教导ヾ(´∀｀。ヾ)~</li></ul><p><strong>参考资料：</strong></p><ul><li><a href="https://www.jianshu.com/p/59eeb1493a45">https://www.jianshu.com/p/59eeb1493a45</a></li><li><a href="https://www.mouryou.fun/2019/02/11/vultrserver/">https://www.mouryou.fun/2019/02/11/vultrserver/</a></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux命令行</title>
      <link href="/posts/36859.html"/>
      <url>/posts/36859.html</url>
      
        <content type="html"><![CDATA[<p>&nbsp;</p><h3 id="问题-amp-解决"><a href="#问题-amp-解决" class="headerlink" title="问题&amp;解决"></a>问题&amp;解决</h3><ul><li><h4 id="卸载vmware-tools："><a href="#卸载vmware-tools：" class="headerlink" title="卸载vmware tools："></a>卸载vmware tools：</h4><p><img src="https://i.loli.net/2019/07/12/5d2865dc5de7c22108.png" alt="1562893380401.png"></p></li></ul><p><strong>Q</strong>：Linux  ( Ubuntu 18.04) 下卸载原有VMware失败？</p><p><strong>S</strong> ：</p><ol><li><p>查找vmware-uninstall-tools.pl</p><pre class=" language-bash"><code class="language-bash"><span class="token function">find</span>   /   -name  vmware-uninstall-tools.pl</code></pre></li><li><p>进入vmware-uninstall-tools.pl所在目录</p></li><li><p>卸载</p><pre class=" language-bash"><code class="language-bash">perl vmware-uninstall-tools.pl</code></pre><a id="more"></a><p><img src="https://i.loli.net/2019/07/12/5d28657d79d8251023.png" alt="1562894980273.png"></p></li></ol><ol start="4"><li><p>ubuntu安装vm tools：</p><ul><li><p><a href="https://blog.csdn.net/WU9797/article/details/78138202">https://blog.csdn.net/WU9797/article/details/78138202</a></p></li><li><p><a href="https://blog.csdn.net/colin_lisicong/article/details/70193552">https://blog.csdn.net/colin_lisicong/article/details/70193552</a></p></li><li><p><a href="https://blog.csdn.net/u013142781/article/details/50539574">https://blog.csdn.net/u013142781/article/details/50539574</a></p></li></ul></li><li><p>centos安装vm tools：</p><ul><li><a href="https://blog.csdn.net/tangbin0505/article/details/82838394">https://blog.csdn.net/tangbin0505/article/details/82838394</a></li></ul></li></ol><h4 id="sudo和su命令详解："><a href="#sudo和su命令详解：" class="headerlink" title="sudo和su命令详解："></a>sudo和su命令详解：</h4><ul><li><a href="https://blog.csdn.net/tietao/article/details/6843588">https://blog.csdn.net/tietao/article/details/6843588</a></li></ul><h5 id="SSH、shell、Xshell-、bash、Git、Git-bash-、Git-CMD、Git-shell-概念"><a href="#SSH、shell、Xshell-、bash、Git、Git-bash-、Git-CMD、Git-shell-概念" class="headerlink" title="SSH、shell、Xshell 、bash、Git、Git bash 、Git CMD、Git shell 概念"></a>SSH、shell、Xshell 、bash、Git、Git bash 、Git CMD、Git shell 概念</h5><ul><li><a href="https://www.jianshu.com/p/d2357b066bb1">https://www.jianshu.com/p/d2357b066bb1</a><br>​</li></ul><h2 id="Linux-基础命令学习"><a href="#Linux-基础命令学习" class="headerlink" title="Linux 基础命令学习"></a>Linux 基础命令学习</h2><ul><li><p>[sudo]模式下:  (重新设定账户密码)</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span>  <span class="token function">passwd</span> root</code></pre></li><li><p>su / (根目录)  |  su  -   |  su  root</p></li><li><p>cd ..(空格) （切换目录）：    |   cd~  ， (空格)  cd (返回主目录)</p></li><li><p>ls ，ll (查看目录下文件)   |   pwd(查看当前路径)</p></li><li><p>rm (删除文件)  |  rm -R (删除文件夹)</p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从0到1的旅程</title>
      <link href="/posts/30198.html"/>
      <url>/posts/30198.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-初·心"><a href="#1-初·心" class="headerlink" title="1.初·心"></a>1.初·心</h2><p>至此，我搭建个人网站的初步计划也算是告一段落了。</p><p>有得有失吧，学习过程不能说是很高效，但是也算有所收获，也不枉数日的付出。至少让我对github，对命令行，对代码的配置，有了一定的认识跟理解。其实也就是瞎折腾，能鼓捣出一个像样的东西，让他们串连起来，就很是满足了呢。</p><p>打从一开始，对个人博客搭建就有所想法，却迟迟不付诸行动。假期刚至，大三下的课程也就此完结，没有了课业的负担，整个人也变得散漫起来，想学什么东西却不知从何学起，于是就想，定个目标吧。先把之前的想法实践起来，当个小项目一样好好做完，就好了。没想到，还真就成了。</p><p>下面可以谈谈我在搭建过程中遇到的一些磕磕绊绊。</p><a id="more"></a><h2 id="2-Hexo"><a href="#2-Hexo" class="headerlink" title="2.Hexo"></a>2.Hexo</h2><p>偶然间听朋友讲起这个，之前一直好奇他的框架是怎么搭建的，甚至连部署的概念都很是模糊，听起来可别提多高大上了。又是vue.js，还有django，还有flask，说起来一套一套的，就是些前端框架搭建的知识。</p><p>其实还好，恰好我的笔记本，在先前配置环境时，安了不少东西。本身就是一个喜欢折腾的人，git for Windows 和 node.js 都有，于是，我就按照网上的教程指令，开始了快乐搭建之路。</p><p>刚开始，我是在官网给的YouTube视频里按部就班得学，其实很基础。具体的操作，就是hexo new /g/c/d /s，熟悉基本的git命令行操作，可以很容易上手。于是本地localhost的网站，很轻松就搭建成功。</p><p>想想这就是雏形，心里还有些小激动。因为对前端知识其实掌握不深，让我现成的写css+js我是完全做不到的，但是不要紧，一切的学习都要从借鉴跟调试开始嘛，对git clone 初步掌握的我就开始发现，网上居然有这么多现有的hexo 主题，都是各路大佬开发出来的，一开始我看到的是NexT主题的，但是我非想跟教程作者不同（殊不知next主题相当成熟了），就想选我之前看到的<a href="https://github.com/tufu9441/maupassant-hexo">maupassant</a>主题，结果问题就来了，不知是什么原因，我的css样式死活调不出来，貌似这个主题需要渲染器，我的git安装不进sass这个预处理器。所以在此我真的挣扎了很久，很久，铁头娃真的可以形容我了…=.=</p><p>于是后来，我就邂逅了现在这个主题—yilia。后来也见过了如闪烁之狐等其他好主题，但是有时间再折腾吧。不大想再头铁下去了。也想好好得当一个内容输出者而不是纠结于这样的事情上。不过对于yilia主题，我对她的内部，还是没有研究透。</p><p>作者封装得很好，可以在配置文件里清晰得备注修改自己想要的功能。但其实就我看来，主题还待完善，还缺一些动态特效，跟布局上的设计感。整体主题也因为色调跟字样，质感显得没有其他主题那样好，但是这是开始的地方，还是挺值得留恋的。</p><p>接着，我就对着现有的模板加功能了，评论区选用的gitment（其实我对vanline更有好感，因为不需要繁琐的账号登陆。不过管理起留言数据来就没那么方便了），加了不蒜子的访客统计，百度流量统计，其实过程都挺简单的，触类旁通。</p><p>但是我纠结的第二个点又来了呢，tags跟category的路径对不上，我好疑惑，也是一如既往得各种查。emmm…并没有太好的结果，大家的主题都一样，没有找到相匹配的（或许说我不应该过分依赖百度跟谷歌…应该去github上看看，gist应该是个好东西，有空多鼓捣鼓捣。）又快自闭了…这就导致我的主题没办法分二级目录…归根还是对主题的搭建不熟悉，毕竟是套用别人的，得熟知才好。</p><p>最终还是完成了，基本的搭建，部署在github上</p><h2 id="3-DNS"><a href="#3-DNS" class="headerlink" title="3.DNS"></a>3.DNS</h2><p>关于域名，我也是挑了好半天，最后还是决定选用国外不用备案的。去namesilo上花了$7.99 买了一年的，一定得是.com的呀，有牌面不是，然后关于域名解析，我也按照网上的步骤来，基础薄弱可真是只能照猫画虎着来，而且英文真的好重要啊，不习惯看外网都看不懂内容。绑定到github上后可就好很多了，就好像自己办了张身份证一样，小开心。</p><h2 id="4-VPS"><a href="#4-VPS" class="headerlink" title="4.VPS"></a>4.VPS</h2><p>这时候，我也不知道哪根筋抽了，明明部署在github上就行了，非想买个服务器玩玩，这不是变相给自己挖坑嘛。但是…真香警告…我还是花了$10 在vultr上买了centOS 6的服务器（活动居然还送了$50 ,这够我玩一年的了，不说了，马云爸爸牛逼。）哇…万恶的Windows要加收$6的服务费（过路费），╭(╯^╰)╮我是不会屈从的（尽管自己对Linux真的不是熟悉…课都白上了2333），这其中还遇到了ssh跟termux这些个远端操控系统的神奇东西，估计免不了折腾了。</p><h2 id="5-HTTPS-amp-ssl"><a href="#5-HTTPS-amp-ssl" class="headerlink" title="5.HTTPS&amp;ssl"></a>5.HTTPS&amp;ssl</h2><p>对于这种加密的超文本传输协议，我只能说——好折腾呐（流下了对Liunx不熟悉的泪水…），有意思的是，我最后在github的setting上启用了enforce https 这个按钮…然后他就给我发了一年的ssl证书，让我实现了强制跳转…可以说，我这次的行为是…无意义的？？！因为我到最后貌似也没折腾成其中的某一种方法。</p><p>①Windows— IIS:不跟我提，我都不知道这玩意儿是啥…可以干啥用…去freeSSL.cn上下了一个keymanager，里头有个一键部署安装方式就是这个（大概就是用命令行脚本启动吧）…但是我还是想多了，因为脚本它根本不顶用…至少对我而言…这方式不得行。而且，我的万维网一直是停止的，80端口总是被占用着。</p><p>②Java —Tomcat: emm…这其实也算是变相的Apache部署吧。这让我又配置了Java jdk，又安装了tomcat。然而，让我郁闷的是，最后localhost连通了，却毫无卵用…（并没有显示那个诱人的小绿锁。）本以为这是我最接近真香的一次实践了，我反复查看对照sever.xml，反复得在终端startup…再一次自闭。我的小网站依旧我行我素得“不安全”</p><p>③Linux —Nginx:其实就风评而言，这个应该是最简单直接的https管理方式了，可惜人对不熟悉的操作系统，命令行总是有所抵触的，我还是最后才选了它。其实我一早就用几个命令行获取了证书ssl，可惜没有坚持下去配置文件，才绕这么大一个弯。</p><p>关于ssl，证书的获取当然可以去大企业大网站获取，而且整个的部署分配也相对简单，真是有钱啥都可以帮你办得妥妥当当。但是我一开始就避开了国内的企业，就是因为要省去过多的实名。我还是选择了github上的一个免费证书的项目—Let’s Encrypt。就是90天的证书，得续期，估计还得去Linux上鼓捣。</p><blockquote><p>大体就在这些方面学习了一下，自己还用x-mind做了张知识树网格图。</p></blockquote><p>![LRWY@$9Q70Q9DW6]KG<a href="https://i.loli.net/2019/07/12/5d28652815b9299155.png">7GMC.png</a></p><p>自我感觉就是，还有挺多地方需要完善的。近期想学习下UI方面的知识，毕竟朋友上千大洋的课不嫖来看看怎么对得起他嘛，哈哈开个玩笑。不过PS，PR，AE以及PPT 的技能点都要给我满上呀。虽然不是特别刚需，但是技多不压身嘛。心里还有些个创建微信公众号，拍高质量vlog视频的想法，做个内容输出者。</p><p>代码方面，其实还是想先学好python吧，Linux也得多了解了解了。不然搭个网站，整个VPS都够呛。以及一些为了就业而要学习好的 数据结构，计算机网络原理…一定…会考的。哈哈哈，所以我压根折腾得都不想考研嘛</p><p>以后可得好好吃饭，最近胡子都长长了。健康，有健康才能折腾。</p><blockquote><p>生命不息，折腾不止。</p></blockquote><p>ps：今天，7.10 是我宝宝的生日，祝他生日快乐⑧。他说近来有些烦恼，也没跟我具体细说，我最近也有点忘我，不怎么联系 他。就没有那么腻歪了的，emm…因为要为了远方看齐呀。 </p><p>有时候，常常想万一哪天突然从世界上消失了的问题。但是发现，其实这些，都有点感性了。做自己喜欢的事情不就好了，开心最重要嘛，有成就感的事会让人振奋。（但是偶尔想想也还好，哈哈^_^）</p><p>自己也还有很多不足，感觉基础太薄弱了，会的东西不多，功利一点的话，应该可以多匹配了解一下自己还欠缺多少东西。毕竟曾喜欢的人都已经远行，自己也要奋起直追，活出自我才好。</p><p>且行且珍惜，加油呀，宝宝。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Github和Hexo的个人博客搭建心得</title>
      <link href="/posts/53516.html"/>
      <url>/posts/53516.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>| 仅以此来说明自己开发个人博客的心路历程以及所获所得</p><p>​     | 行在路上，你依旧是少年，要么不做，要做，就做行动派</p></blockquote><h2 id="By-2019-年"><a href="#By-2019-年" class="headerlink" title="By_2019 年"></a>By_2019 年</h2><h3 id="7-5"><a href="#7-5" class="headerlink" title="7.5"></a>7.5</h3><p>  闲来无事，就很想开启自己思考了很久的个人博客计划。想自己搭建一个网站写博客，并从中学习点什么，或许这样对我来说，比成天得游戏更有意义一些（虽说都是玩跟瞎鼓捣，但是还是想体验一把，做个行动派，并从中发现学习的乐趣。） </p><p>  于是，我先从先前了解的hexo—一个博客搭建的框架。可能也是很巧合，安装hexo所需要的框架，node.js与git 我都有。</p><blockquote><p>我的目标是：建立一个可交互的，有独特界面风格，能引入流量的有内涵的个人博客。</p></blockquote><p>  当然，首先你得搭一个框架出来。说来惭愧，本科生学了这么多年，真正有意义的事却没有做成多少，而我希望，这是一件值得做的事情，并坚持下去，就是这么简单。</p><a id="more"></a><p>  其实，hexo的搭建跟着官网的视频讲解就好了。难度其实不算大，有点计算机基础的人都可以做到，更别说一些高级的命令行操作了，其实我现在都不知道我Linux跟OS到底学了个啥，工科这种重在实践的东西，理论都让我感觉枯燥。可能，我喜欢给定一个目标，边实践边补充专业知识吧。有些东西，现在才发觉，也不算晚吧（反正都是瞎折腾不是，跟着自己的喜好来不就好咯）</p><p>  其实第一天我就遇到了坎儿，我node.js的环境变量其实没有问题，但是我还是想在配置一个高级主题，想使用渲染器的插件。一直调用不得，对没错就是你，sass。本已经配置完成的hexo，我重新删去它二次来过。是的，期间我还了解了注册表的用途，但是到现在我依旧没有很好得了解操作系统。（虽然针对科学得在win系统下删除卸载软件的全部信息都没有很强的逻辑）这可能怪不得系统，开发优化所需要生成的文件本就很多了。我们这些看客不过是不懂开发者的艰辛，随手拿来用罢了。</p><p>   就这样，我半推半就得勉强低效率得完成了一天，其实是在补充一些知识，而且做着一些重复工作。本不必这样，是因为基础不牢靠。不过好在，我的兴趣并未削减。</p><p>  github是个宝地，可惜自己英文水平不到位，有时候看一些文档就挺吃力的，真正了解熟悉这个东西，可能还得多研究研究。</p><blockquote><p>完成度：10%  基础框架的搭建，主题选用，常见hexo命令行操作，部署到github上去。</p></blockquote><h4 id="7-6"><a href="#7-6" class="headerlink" title="7.6"></a>7.6</h4><p>  其实，要想完成一个高质量的博客，书写内容也相当关键。我本就是一个爱写些感想心思的人。之前有用过Markdown。在朋友的推荐下，用了typora这个软件，首次接触.md这样的文件。对其独特的编排，优雅简洁的界面有所喜欢（但更多时候，我还是纯碎把它当做高级的TXT记事本，装13用。）</p><p>  这一天，我才看了markdown的语法简介。</p><p>  好的产品总是有受众群体的，它就适合我这样可能又不一定以代码为生的文字编写者。</p><p>  我还是对昨日的框架，昨日绊倒我的主题恋恋不忘。我甚至下了nvm，但是后来又放弃了。因为并不能解决我的问题，我还是老老实实去官网下了node.js最新版，删除干净注册表跟环境变量。最后整一次，不行就放弃那个主题。<strong>有时候，我发现自己特别随性，干一件事就很容易跑偏。跑偏不要紧，就怕自己一直在一个地方绕圈圈，停滞不前，这可不是一件好事。</strong>（包括我现在洋洋洒洒得写着心得文章。）我喜欢统一，简单的整理跟规划，条理清晰。emm…可能偶尔有点强迫症吧。总是一阵一阵的。</p><p>  我开始了对整个主题系统的研究，不得不说，开发者写得很好。我一开始绝对是写不出这么有逻辑条理的代码的。不过，有些设计的色彩，或者样式，不对我口味。或者是动画效果，滑动的功能等，我还是想做得更有个人风格一点，那就先了解完它整体的构造，再加以二次创作吧。</p><p>  看到很多大佬，也是沿用的这个模板搭建的博客，emm…可能我懒的时候也就将就着吧。</p><p>  要是有一种工具可以直接将脑中的功能画面映射到屏幕前该多好，不需要敲代码实现（等等，我在想什么白日梦呢…）</p><p>  同样得，我了解了域名，服务器。我想搭建完整的个人网站，这两个不可缺少吧。不过这都相当于后话了，先整好内在的排版什么的再进行修改填补吧。测试版先构建构建。</p><p>   我发现静态的博客，没办法上传图片，于是就找到了图床，用的SM.MS，免注册使用的。还去github上偶然下了PicGo。看起来应该挺有意思的。希望可以解锁生产力新姿势。</p><p>  对了，其实这一天最难的地方还是评论区的搭建跟管理了。国内很多主流的评论系统停止服务了（大概是这东西的商用价值一般吧）就用了gitments的（主题上也帮忙自动添加了，但是一些参数得自行修改。）repo这个仓库名我写成地址了，然后就error：no found。 幸好有个大佬，专门写了排坑文章，才让我得以完成评论系统。还是挺开心的。就不清楚以后会不会有什么其他bug了。就是接入的借口就只有github这个选项，有些单一，后台管理的评论系统也是在github上，还发现有个叫gittalk的，感觉也有些类似，不知功能稳定性如何，待完善吧。</p><p>  有一点就是，这几天有点作息不规律，得控制一下了，毕竟身体要紧。今天争取早点睡，但是专注做一件事，真是容易忘我，效率有待提高。</p><blockquote><p>完成度：25%  渐渐熟悉项目整体，图床使用，评论区搭建，但是域名与服务器都还有待商榷</p></blockquote><p>####7.8</p><p>​     近日的学习过程中，已经熟悉了hexo这款主题大致的调配参数，各项功能也可以实现，当然这其中也算是带着兴趣边学边玩吧。</p><blockquote><p>待完善实现功能：</p><ul><li>评论区搭建（gitment）：但是需要登录github账号，我有点想尝试替换成’’<a href="https://valine.js.org/">Valine</a>评论系统’’,且也有大佬的攻略开路。主要是无后端不需要登陆这样繁琐的过程，让交互性得以提升。评论，主要是说话给人看的 ，就只需要简简单单说话就好了呀。</li><li>内容标签的分类（tags &amp; catalogy）：目前还没找到小书本一样的目录分类级别方法，看到同类型博客的清晰划分，感觉需要这样的东西优化整理博客内容。</li><li>主页布置与设计：其实有些动态效果，还是可以有的。这个主题有些过分简洁了，相比于next主题的成熟有质感的主题风格，还有闪烁之狐主题的动态效果，yilia主题更像是给我初学入门的主题。有必要自行添加主题内容，加深理解。</li><li>运营与维护：一个web博客的搭建，很多人就做做玩就行了，没有坚持写下去记录的决心。我也不知道可以坚持多久，试试吧。</li></ul></blockquote><blockquote><p>完成度：40%  </p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术心得 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
